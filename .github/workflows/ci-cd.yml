name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: snyc_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        CI: "true"
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        DATABASE_URL: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: snyc_test
      run: |
        pytest tests/ -v

  deploy:
    name: Deploy to Azure
    needs: test  # This ensures deploy only runs if tests pass
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'  # Only deploy on main branch
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: https://syncregistry.azurecr.io/
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push container image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: syncregistry.azurecr.io/${{ secrets.AZURE_REGISTRY_USERNAME }}/sync-api:${{ github.sha }}
        file: ./Dockerfile

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'sync-api'
        images: 'syncregistry.azurecr.io/${{ secrets.AZURE_REGISTRY_USERNAME }}/sync-api:${{ github.sha }}'
        configuration-file: docker-compose.yml
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        STRIPE_PRICE_ID: ${{ secrets.STRIPE_PRICE_ID }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

    - name: Azure logout
      run: |
        az logout

  notify:
    name: Notify on Status
    needs: [test, deploy]
    if: always()  # Run even if previous steps fail
    runs-on: ubuntu-latest
    
    steps:
    - name: Check build status
      if: ${{ contains(needs.*.result, 'failure') }}
      run: exit 1
      
    - name: Notify on success
      if: ${{ !contains(needs.*.result, 'failure') }}
      run: echo "Pipeline completed successfully!" 